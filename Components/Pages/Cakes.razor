@page "/cakes"
@using BlazorCakes.Data
@using BlazorCakes.Models
 
@rendermode InteractiveServer
@inject AppDbContext Db

<h3>Cakes</h3>

<div class="form-group">
	<label for="name">Name:</label>
	<input class="form-control" @bind="newCake.Name" placeholder="CakeName" />
</div>
<div class="form-group">
	<label for="price">Price:</label>
	<input class="form-control" @bind="newCake.Price" type="number" step="0.01" placeholder="Price" />
</div>
<br />
<button type="button" class="btn btn-primary" @onclick="AddCake">Add</button>

@if (cakes == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in PagedCakes())
            {
                <tr>
                    <td>@c.Name</td>
                    <td>@c.Price</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-flex justify-content-between">
    <button class="btn btn-primary" @onclick="PrevPage" disabled="@((currentPage == 1))">Previous</button>
    <span>Page @currentPage of @TotalPages</span>
    <button class="btn btn-primary" @onclick="NextPage" disabled="@((currentPage == TotalPages))">Next</button>
</div>
}

@code {
	private List<Cake> cakes = new();
	private Cake newCake = new();


	private int currentPage = 1;
    private int pageSize = 5;

    private int TotalPages => (int)Math.Ceiling((double)cakes.Count / pageSize);


	protected override void  OnInitialized()
	{
		cakes =  Db.cakes.ToList();

	}	

	private void AddCake()
	{ 
		if (string.IsNullOrWhiteSpace(newCake.Name) || newCake.Price <= 0)
		{
			return;
		}	

		Db.cakes.Add(newCake);
		Db.SaveChanges();
		cakes =  Db.cakes.ToList();
		newCake = new Cake();
	
	}

	private IEnumerable<Cake> PagedCakes()
    {
        return cakes.Skip((currentPage - 1) * pageSize).Take(pageSize);
    }

    private void NextPage()
    {
        if (currentPage < TotalPages) currentPage++;
    }

    private void PrevPage()
    {
        if (currentPage > 1) currentPage--;
    }
}
